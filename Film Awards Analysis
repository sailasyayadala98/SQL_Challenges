CHALLENGE 8
Film Awards Analysis 
 

-- Create Movies table
CREATE TABLE Movies (
    MovieID INT PRIMARY KEY,
    Title VARCHAR(255),
    ReleaseYear INT,
    DirectorID INT,
    Genre VARCHAR(255),
    PlotSummary TEXT,
    IMDbRating DECIMAL(3, 1)
);
-- Populate Movies table
INSERT INTO Movies (MovieID, Title, ReleaseYear, DirectorID, Genre, PlotSummary, IMDbRating)
VALUES
    (1, 'The Shawshank Redemption', 1994, 1, 'Drama', 'Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.', 9.3),
    (2, 'The Godfather', 1972, 2, 'Crime, Drama', 'The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.', 9.2),
    (3, 'The Dark Knight', 2008, 3, 'Action, Crime, Drama', 'When the menace known as The Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.', 9.0),
    (4, 'Pulp Fiction', 1994, 4, 'Crime, Drama', 'The lives of two mob hitmen, a boxer, a gangster and his wife, and a pair of diner bandits intertwine in four tales of violence and redemption.', 8.9),
    (5, 'Forrest Gump', 1994, 5, 'Drama, Romance', 'The presidencies of Kennedy and Johnson, the events of Vietnam, Watergate, and other historical events unfold from the perspective of an Alabama man with an IQ of 75, whose only desire is to be reunited with his childhood sweetheart.', 8.8),
    (6, 'Inception', 2010, 6, 'Action, Adventure, Sci-Fi', 'A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.', 8.8);
-- Create Awards table
CREATE TABLE Awards (
    AwardID INT PRIMARY KEY,
    AwardName VARCHAR(255),
    Category VARCHAR(255),
    Description TEXT,
    Year INT
);
-- Populate Awards table
INSERT INTO Awards (AwardID, AwardName, Category, Description, Year)
VALUES
    (1, 'Academy Awards', 'Best Picture', 'Awarded for excellence in cinematic achievement.', 2023),
    (2, 'Golden Globe Awards', 'Best Director', 'Awarded for the best directing of a film.', 2023),
    (3, 'BAFTA Awards', 'Best Actor', 'Awarded for the best performance by an actor in a leading role.', 2023);
-- Create Nominations table
CREATE TABLE Nominations (
    NominationID INT PRIMARY KEY,
    MovieID INT,
    AwardID INT,
    NomineeName VARCHAR(255),
    Role VARCHAR(255),
    FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
    FOREIGN KEY (AwardID) REFERENCES Awards(AwardID)
);
-- Populate Nominations table
INSERT INTO Nominations (NominationID, MovieID, AwardID, NomineeName, Role)
VALUES
    (1, 1, 1, 'The Shawshank Redemption', 'Movie'),
    (2, 2, 1, 'The Godfather', 'Movie'),
    (3, 3, 1, 'The Dark Knight', 'Movie'),
    (4, 1, 2, 'Frank Darabont', 'Director'),
    (5, 2, 2, 'Francis Ford Coppola', 'Director'),
    (6, 3, 2, 'Christopher Nolan', 'Director'),
    (7, 1, 3, 'Tim Robbins', 'Actor'),
    (8, 2, 3, 'Marlon Brando', 'Actor'),
    (9, 3, 3, 'Christian Bale', 'Actor'),
    (10, 4, 1, 'Pulp Fiction', 'Movie'),
    (11, 5, 1, 'Forrest Gump', 'Movie'),
    (12, 6, 1, 'Inception', 'Movie'),
    (13, 4, 2, 'Quentin Tarantino', 'Director'),
    (14, 5, 2, 'Robert Zemeckis', 'Director'),
    (15, 6, 2, 'Christopher Nolan', 'Director'),
    (16, 4, 3, 'John Travolta', 'Actor'),
    (17, 5, 3, 'Tom Hanks', 'Actor'),
    (18, 6, 3, 'Leonardo DiCaprio', 'Actor');
-- Create Winners table
CREATE TABLE Winners (
    WinnerID INT PRIMARY KEY,
    AwardID INT,
    NominationID INT,
    FOREIGN KEY (AwardID) REFERENCES Awards(AwardID),
    FOREIGN KEY (NominationID) REFERENCES Nominations(NominationID)
);
-- Populate Winners table
INSERT INTO Winners (WinnerID, AwardID, NominationID)
VALUES
    (1, 1, 1),   
    (2, 2, 13),  
    (3, 3, 9);  

 

Queries to be Executed: 
Easy:
1.	List all the movies released in 1994.
2.	Find the average IMDb rating of all the movies in the dataset.
3.	**Retrieve the names of all the directors and their respective movies.
Medium:
1.	Find the total number of nominations each movie has received.
2.	List the names of all the actors/actresses who won awards.
3.	Find the total number of nominations each director has received.
Hard:
1.	List the movies that won awards for which they were nominated for.
2.	Find the movie with the highest number of nominations.
3.	Retrieve the names of the movies and their respective directors who won awards.
4.	Identify the director who has won the most awards.
BONUS:
1.	List the movies along with the total number of nominations they received, sorted in descending order of nominations count.
2.	Retrieve the top 3 movies with the highest average IMDb rating.
3.	Find the percentage of nominations each movie received compared to the total number of nominations across all movies.
4.	List the movies along with the count of awards they won, but only include movies that won more than one award.
5.	For each award category, find the movie with the highest IMDb rating that was nominated for that category.

Execution: 
**Query #1**

    select *  from Movies
    where ReleaseYear='1994';

---
**Query #2**

    select round(avg(IMDbRating),2) as average_IMDB 
    from Movies;
 
---
**Query #3**

    select n.NomineeName,n.Role,m.Title
    from Nominations n join Movies m on n.MovieID=m.MovieID
    where n.Role='Director';

---
**Query #4**

    select n.MovieID,m.Title, count(n.MovieID) as total_no_of_nominations
    from Nominations n join Movies m on n.MovieID=m.MovieID
    group by n.MovieID;

---
**Query #5**

    select n.NomineeName
    from Nominations n join Winners w on n.NominationID=w.NominationID
    where n.Role='Actor';

---
**Query #6**

    select n.NomineeName, count(n.NominationID) as total_number_of_nominations
    from Nominations n
    where n.Role='Director'
    group by n.NomineeName;

 
---
**Query #7**

    select m.Title as Movie_Name,n.Role as Nominee_Role,a.AwardName as Award_title
    from Nominations n join Awards a on n.AwardID=a.AwardID
    join Winners w on w.AwardID=a.AwardID
    join Movies m on n.MovieID=m.MovieID
    where n.NominationID=w.NominationID;


---
**Query #8**

    select n.MovieID, count(n.NominationID) as no_of_nominations,
    dense_rank() OVER(order by count(n.NominationID)) as rank_by_nominations
    from Nominations n
    group by n.MovieID;

---
**Query #9**

    select m.Title as Movie_Name,m.DirectorID,n.NomineeName as DirectorName
    from Movies m join Nominations n on n.MovieID=m.MovieID
    join Winners w on w.NominationID=n.NominationID
    where n.Role='Director';

---
**Query #10**

    Select N.NomineeName AS DirectorName, COUNT(*) AS AwardCount
    From Nominations N
    Join Winners W ON N.NominationID = W.NominationID
    Where N.Role = 'Director'
    Group by N.NomineeName
    Order by AwardCount DESC;

---
**Query #11**

    select n.MovieID,m.Title,count(n.NominationID) as total_no_of_nominations
    from Nominations n join Movies m on n.MovieID=m.MovieID
    group by n.MovieID
    order by total_no_of_nominations desc;

---
**Query #12**

    select m.MovieID,m.title,m.IMDbRating
    from Movies m
    group by m.MovieID
    order by m.IMDBRating desc
    limit 3;

---
**Query #13**

    with each_movie_nom as(
      select n.MovieID, m.title,count(n.NominationID) as each_movie_total 
      from Nominations n join Movies m on n.MovieID=m.MovieID
      group by n.MovieID ),
      total_nom as(
        select count(NominationID) as tot_nom
        from Nominations)
        
      select em.MovieID,em.title, round((each_movie_total/tot_nom)*100,2) as Percentage_contribution_of_each_movie
      from each_movie_nom em 
      cross join total_nom tm;

---
**Query #14**

    select n.MovieID,m.title,count(n.AwardID) as award_count
    from Movies m join Nominations n on m.MovieID=n.MovieID
    join Winners w on n.NominationID=w.NominationID
    group by n.MovieID
    having award_count>=1;

---
**Query #15**

    with CategoryHighestRating as (
        select N.AwardID,max(M.IMDbRating) as MaxRating
        from Nominations N
        join Movies M ON N.MovieID = M.MovieID
        group by N.AwardID
    )
    
    select A.AwardName,M.Title,M.IMDbRating
    from CategoryHighestRating CHR
    join Nominations N ON CHR.AwardID = N.AwardID
    join Movies M ON N.MovieID = M.MovieID
    join Awards A ON N.AwardID = A.AwardID
    where M.IMDbRating = CHR.MaxRating;

---
